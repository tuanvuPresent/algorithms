package baitap;

import java.util.Scanner;

public class QuaTang {

	private static boolean isPrime(int n) {
		// TODO Auto-generated method stub
		if (n < 2)
			return false;
		for (int i = 2; i * i <= n; i++) {
			if (n % i == 0)
				return false;
		}
		return true;
	}

	static int output[];
	static boolean visit[];
	static int res = 0;

	private static void solve(int arr[], int x) {
		// TODO Auto-generated method stub
		if (x + 1 == arr.length) {
//			for (int i = 0; i < output.length; i++) {
//				System.out.print(output[i] + " ");
//			}
//			System.out.println();
			if (isPrime(output[0] + output[x])) {
				res++;
			}
			return;
		}
		for (int i = 1; i < arr.length; i++) {
			if (visit[arr[i]])
				continue;
			if (isPrime(output[x] + arr[i])) {
				output[x + 1] = arr[i];
				visit[arr[i]] = true;
				solve(arr, x + 1);
				visit[arr[i]] = false;
			}
		}
	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		int numTest = sc.nextInt();
		for (int tCase = 0; tCase < numTest; tCase++) {
			// nhap
			int n = sc.nextInt();
			int arr[] = new int[n];
			for (int i = 0; i < n; i++) {
				arr[i] = sc.nextInt();
			}
			output = new int[n];
			visit = new boolean[51];
			res = 0;
			// xu ly
			output[0] = arr[0];
			solve(arr, 0);
			// xuat
			System.out.println(res);
		}
	}
}