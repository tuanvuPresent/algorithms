package baitap;

import java.util.Scanner;

public class LatGach {

	/*
	 * => f(i) = f(i-1) + f(i-2) v?i f(1) = 1 và f(2) = 2 => f(N) là k?t qu? c?a bài
	 * toán
	 */
	static String output[] = new String[101];

	private static String addString(String s1, String s2) {
		// TODO Auto-generated method stub
		String output = "";
		int len1 = s1.length();
		int len2 = s2.length();

		int lenMax = len1 > len2 ? len1 : len2;
		int lenMin = len1 < len2 ? len1 : len2;
		int carry = 0;
		for (int i = 0; i < lenMin; i++) {
			int x = (s1.charAt(len1 - i - 1) - '0') + (s2.charAt(len2 - i - 1) - '0') + carry;
			if (x > 9) {
				x = x - 10;
				carry = 1;
			} else {
				carry = 0;
			}
			output = x + "" + output;
		}

		int n = lenMax - lenMin;
		if (len1 > len2) {
			for (int i = 0; i < n; i++) {
				int x = (s1.charAt(n - i - 1) - '0') + carry;
				if (x > 9) {
					x = x - 10;
					carry = 1;
				} else {
					carry = 0;
				}
				output = x + "" + output;
			}
		} else {
			for (int i = 0; i < n; i++) {
				int x = (s2.charAt(n - i - 1) - '0') + carry;
				if (x > 9) {
					x = x - 10;
					carry = 1;
				} else {
					carry = 0;
				}
				output = x + "" + output;
			}
		}
		output = carry == 1 ? 1 + "" + output : output;
		return output;
	}

	private static void ketQua(int n) {
		// TODO Auto-generated method stub
		output[1] = "1";
		output[2] = "2";
		output[3] = "3";

		if (n > 3) {
			int i = 4;
			while (i <= n) {
				output[i] = addString(output[i - 1], output[i - 2]);
				i++;
			}
		}

	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);

		int numTest = sc.nextInt();
		for (int tCase = 0; tCase < numTest; tCase++) {
			// nhap
			int n = sc.nextInt();
			// xu ly
			ketQua(100);
			String res = output[n];
			// xuat
			System.out.println(res);
		}
	}
}