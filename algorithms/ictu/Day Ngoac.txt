#include<iostream>

using namespace std;


	 char output[22];
	 char key[] = { '(', ')' };

	  bool check(char s[], int n) {
		// TODO Auto-generated method stub
		int open = 0;
		int close = 0;
		for (int i = 0; i < n; i++) {
			if (s[i] == '(') {
				open++;
			}
		}
		close = n - open;
		return (open >= close) && (open <= n);
	}

	  int getOpen(char s[],int n) {
		// TODO Auto-generated method stub
		int open = 0;
		for (int i = 0; i < n; i++) {
			if (s[i] == '(') {
				open++;
			}
		}
		return open;
	}

	  void solve(int n, int k) {
		// TODO Auto-generated method stub
		if (k > n * 2) {
			return;
		}
		if (k == n * 2) {
			if (getOpen(output,k) == n) {
				for (int i = 0; i < k; i++) {
				cout<<output[i];
				}
				cout<<endl;
				return;
			}
		} else {
			for (int i = 0; i < 2; i++) {
				output[k] = key[i];
				if (getOpen(output,k) <= n && check(output, k)) {
					solve(n, k + 1);
				}
			}
		}
	}
int main(){
		output[0] = '(';
		int n ;
		cin>>n;
		solve(n, 1);
	
	return 0;
}
